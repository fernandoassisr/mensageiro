# Pipeline to push to git hub repositorio
image: alpine:latest

pipelines:
  default:
     - step:
          name: Test using PHPUnit
          deployment: test   # can be test, staging or production.
      # trigger: manual  # Uncomment to make this a manual deployment.
          script:
            # - ./install-phpunit.sh  
            - apk --no-cache add \
                  bash \
                  ca-certificates \
                  curl \
                  git \
                  php7 \
                  php7-bcmath \
                  php7-ctype \
                  php7-curl \
                  php7-dom \
                  php7-exif \
                  php7-fileinfo \
                  php7-json \
                  php7-mbstring \
                  php7-mcrypt \
                  php7-mysqli \
                  php7-opcache \
                  php7-openssl \
                  php7-pcntl \
                  php7-pdo \
                  php7-pdo_mysql \
                  php7-pdo_pgsql \
                  php7-pdo_sqlite \
                  php7-phar \
                  php7-session \
                  php7-simplexml \
                  php7-soap \
                  php7-tokenizer \
                  php7-xdebug \
                  php7-xml \
                  php7-xmlreader \
                  php7-xmlwriter \
                  php7-zip \
                  php7-zlib \
                  unzip \
              && php -r "copy('https://pear.php.net/go-pear.phar', 'go-pear.phar');" \
              && php go-pear.phar \
              && php -r "unlink('go-pear.phar');" \
              && php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \
              && php composer-setup.php --install-dir=/usr/bin --filename=composer \
              && php -r "unlink('composer-setup.php');" \
              && composer require "phpunit/phpunit:^7.4" --prefer-source --no-interaction \
              && composer require "phpunit/php-invoker" --prefer-source --no-interaction \
              && ln -s /tmp/vendor/bin/phpunit /usr/local/bin/phpunit \
              && sed -i 's/nn and/nn, Nicolas Frey (Docker) and/g' /tmp/vendor/phpunit/phpunit/src/Runner/Version.php \
              # Enable X-Debug
              && sed -i 's/\;z/z/g' /etc/php7/conf.d/xdebug.ini \
              && php -m | grep -i xdebug
            - phpunit -c phpunit.xml
     - step:
          name: Deploy to test
          deployment: staging   # can be test, staging or production.
      # trigger: manual  # Uncomment to make this a manual deployment.
          script:
            # Instalando dependencias uteis
            - apk add --no-cache git openssh

            # Criando chaves e relação de confiança
            - git remote set-url origin ${BITBUCKET_GIT_SSH_ORIGIN}
            - eval $(ssh-agent -s)
            - mkdir -p ~/.ssh
            - echo ${PRIVATE_KEY} > ~/.ssh/id_rsa.tmp
            - base64 -d ~/.ssh/id_rsa.tmp > ~/.ssh/id_rsa
            - chmod 600 ~/.ssh/id_rsa

            - git branch
            - git pull git@github.com:fernandoassisr/mensageiro.git $BITBUCKET_BRANCH
            - git branch -d tmp_deploy || true
            - git checkout -b tmp_deploy
            - git branch -f $BITBUCKET_BRANCH tmp_deploy
            - git checkout $BITBUCKET_BRANCH
            - git push git@github.com:fernandoassisr/mensageiro.git $BITBUCKET_BRANCH
            - git push git@github.com:fernandoassisr/mensageiro.git $BITBUCKET_BRANCH     